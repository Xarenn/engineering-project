{"ast":null,"code":"var _jsxFileName = \"/Users/karolpiasecki/Documents/school/real-time-chat-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport SockJs from 'sockjs-client';\nimport Stomp from 'stomp-websocket';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const sock = new SockJs('http://localhost:8080/rl-time-websocket');\n  const stompClient = Stomp.over(sock);\n  const [text, setText] = useState('');\n  const [msgs, setMsgs] = useState([]);\n  useEffect(() => {\n    stompClient.debug = null;\n    stompClient.connect({}, () => {\n      console.log(\"SUB FOR: \", 'app/room/messages/get/1');\n      stompClient.subscribe('app/room/messages/get/1', function (msg) {\n        console.log('MSG', JSON.parse(msg.body));\n        setMsgs(messages => [...messages, JSON.parse(msg.body).message]);\n      });\n    });\n  }, [stompClient]);\n\n  const sendMessage = () => {\n    const messageObj = {\n      \"message\": text,\n      time: new Date(),\n      fromUser: 1,\n      toUser: 2,\n      messageObjectId: 3\n    };\n    stompClient.send('/app/room/message/1', {}, JSON.stringify(messageObj));\n  };\n\n  const onChange = text => {\n    setText(text.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"SendMsg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: msgs.map(function (data, index) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: data\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"Fw2dmadeNPx8Uds9O2pupOFz8Ec=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/karolpiasecki/Documents/school/real-time-chat-frontend/src/App.js"],"names":["SockJs","Stomp","useEffect","useState","App","sock","stompClient","over","text","setText","msgs","setMsgs","debug","connect","console","log","subscribe","msg","JSON","parse","body","messages","message","sendMessage","messageObj","time","Date","fromUser","toUser","messageObjectId","send","stringify","onChange","target","value","map","data","index"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAMC,IAAI,GAAG,IAAIL,MAAJ,CAAW,yCAAX,CAAb;AACA,QAAMM,WAAW,GAAGL,KAAK,CAACM,IAAN,CAAWF,IAAX,CAApB;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW,CAACM,KAAZ,GAAoB,IAApB;AACAN,IAAAA,WAAW,CAACO,OAAZ,CAAoB,EAApB,EAAwB,MAAM;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,yBAAzB;AACAT,MAAAA,WAAW,CAACU,SAAZ,CAAsB,yBAAtB,EAAiD,UAAUC,GAAV,EAAe;AAC5DH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,IAAI,CAACC,KAAL,CAAWF,GAAG,CAACG,IAAf,CAAnB;AACAT,QAAAA,OAAO,CAACU,QAAQ,IAAG,CAAC,GAAGA,QAAJ,EAAcH,IAAI,CAACC,KAAL,CAAWF,GAAG,CAACG,IAAf,EAAqBE,OAAnC,CAAZ,CAAP;AACH,OAHD;AAIH,KAND;AAOH,GATQ,EASN,CAAChB,WAAD,CATM,CAAT;;AAWA,QAAMiB,WAAW,GAAG,MAAM;AACtB,UAAMC,UAAU,GAAG;AACf,iBAAWhB,IADI;AAEfiB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFS;AAGfC,MAAAA,QAAQ,EAAE,CAHK;AAIfC,MAAAA,MAAM,EAAE,CAJO;AAKfC,MAAAA,eAAe,EAAE;AALF,KAAnB;AAOAvB,IAAAA,WAAW,CAACwB,IAAZ,CAAiB,qBAAjB,EAAwC,EAAxC,EAA4CZ,IAAI,CAACa,SAAL,CAAeP,UAAf,CAA5C;AACH,GATD;;AAWA,QAAMQ,QAAQ,GAAIxB,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACD,IAAI,CAACyB,MAAL,CAAYC,KAAb,CAAP;AACH,GAFD;;AAIA,sBAAO;AAAA,4BAEH;AAAA,uCAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,QAAQ,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,eAMH;AAAQ,MAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANG,eASH;AAAA,gBACCb,IAAI,CAACyB,GAAL,CAAS,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC5B,4BAAO;AAAA,oBAAmBD;AAAnB,WAAUC,KAAV;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA;AADD;AAAA;AAAA;AAAA;AAAA,YATG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH;;GAjDQjC,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport SockJs from 'sockjs-client'\nimport Stomp from 'stomp-websocket'\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n\n    const sock = new SockJs('http://localhost:8080/rl-time-websocket');\n    const stompClient = Stomp.over(sock);\n\n    const [text, setText] = useState('')\n    const [msgs, setMsgs] = useState([]);\n\n    useEffect(() => {\n        stompClient.debug = null\n        stompClient.connect({}, () => {\n            console.log(\"SUB FOR: \", 'app/room/messages/get/1')\n            stompClient.subscribe('app/room/messages/get/1', function (msg) {\n                console.log('MSG', JSON.parse(msg.body));\n                setMsgs(messages =>[...messages, JSON.parse(msg.body).message]);\n            });\n        });\n    }, [stompClient]);\n\n    const sendMessage = () => {\n        const messageObj = {\n            \"message\": text,\n            time: new Date(),\n            fromUser: 1,\n            toUser: 2,\n            messageObjectId: 3\n        }\n        stompClient.send('/app/room/message/1', {}, JSON.stringify(messageObj))\n    }\n\n    const onChange = (text) => {\n        setText(text.target.value)\n    }\n\n    return <div>\n\n        <label>\n            Text:\n            <input type=\"text\" name=\"name\" onChange={onChange}/>\n        </label>\n        <button onClick={sendMessage}>\n            SendMsg\n        </button>\n        <ul>\n        {msgs.map(function(data, index) {\n            return <li key={ index }>{data}</li>;\n        })}\n        </ul>\n    </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}